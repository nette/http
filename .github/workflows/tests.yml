name: Tests

on: [push, pull_request]

env:
    php-options: -C -d opcache.enable=0
    php-extensions: fileinfo, intl

jobs:
    tests:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest, macOS-latest]
                php: ['8.0', '8.1', '8.2']
                sapi: ['php', 'php-cgi']

            fail-fast: false

        name: PHP ${{ matrix.php }}/${{ matrix.sapi }} tests on ${{ matrix.os }}
        steps:
            - uses: actions/checkout@v3
            - uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  coverage: none
                  extensions: ${{ env.php-extensions }}

            - run: composer install --no-progress --prefer-dist
            - run: vendor/bin/tester tests -p ${{ matrix.sapi }} -s ${{ env.php-options }}
            - if: failure()
              uses: actions/upload-artifact@v3
              with:
                  name: output ${{ matrix.php }}-${{ matrix.sapi }}-${{ matrix.os }}
                  path: tests/**/output


    lowest_dependencies:
        name: Lowest Dependencies
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.0
                  coverage: none
                  extensions: ${{ env.php-extensions }}

            - run: composer update --no-progress --prefer-dist --prefer-lowest --prefer-stable
            - run: vendor/bin/tester tests -s ${{ env.php-options }}


    code_coverage:
        name: Code Coverage
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.0
                  coverage: none
                  extensions: ${{ env.php-extensions }}

            - run: composer install --no-progress --prefer-dist
            - run: vendor/bin/tester tests -p phpdbg -s ${{ env.php-options }} --coverage ./coverage.xml --coverage-src ./src
            - run: wget https://github.com/php-coveralls/php-coveralls/releases/download/v2.4.3/php-coveralls.phar
            - env:
                  COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: php php-coveralls.phar --verbose --config tests/.coveralls.yml
